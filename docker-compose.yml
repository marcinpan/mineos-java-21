version: '3.8'

services:
  mineos:
    # obraz z Docker Hub.
    image: marcinpa/mineos-java-21:latest
    container_name: mineos
    
    #

    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - FOWNER
      - SETGID
      - SETUID
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4096M
    environment:
      # Zastąp te wartości swoimi danymi.
      GID: '568'
      GROUP_GID: '568'
      GROUP_ID: '568'
      GROUP_NAME: admin
      NVIDIA_VISIBLE_DEVICES: void
      PGID: '568'
      PUID: '568'
      SERVER_PORT: '30052'
      TZ: Etc/UTC
      UID: '568'
      UMASK: '002'
      UMASK_SET: '002'
      USER_ID: '568'
      USER_NAME: admin
      USER_PASSWORD: "Twoje_bezpieczne_haslo"  # Zmień to na swoje hasło!
      USER_UID: '568'
      USE_HTTPS: 'false'
    group_add:
      - 568
    healthcheck:
      interval: 30s
      retries: 5
      start_interval: 2s
      start_period: 15s
      test: >-
        curl --request GET --silent --output /dev/null --show-error --fail
        http://127.0.0.1:30052/admin/login.html
      timeout: 5s
    platform: linux/amd64
    ports:
      - mode: ingress
        protocol: tcp
        published: 30052
        target: 30052
      - mode: ingress
        protocol: tcp
        published: 25565
        target: 25565
    privileged: False
    restart: unless-stopped
    security_opt:
      - no-new-privileges=true
    stdin_open: False
    stop_grace_period: 600s
    tty: False
    volumes:
      # Używamy ścieżki relatywnej, która tworzy folder 'data'
      # w tym samym miejscu, gdzie jest plik docker-compose.yml
      - ./data:/var/games/minecraft
      
# Sekcje poniżej są zbędne, jeśli nie są używane w serwisach, 
# ale nie przeszkadzają w działaniu.
volumes: {}
x-notes: >+
  # MineOS
x-portals:
  - host: 0.0.0.0
    name: Web UI
    path: /
    port: 30052
    scheme: http

